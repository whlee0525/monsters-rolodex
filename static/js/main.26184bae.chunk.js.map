{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","user","SearchBox","placeholder","onChange","type","App","state","searchField","console","log","fetch","then","res","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","handleChangeInput","bind","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,QACpB,4BAAIN,EAAMI,QAAQG,YCFTC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAAoBP,QAASO,GAAlBA,EAAKN,WCNXO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,SAAhB,OACvB,uBAAOb,UAAU,SAASc,KAAK,SAASF,YAAaA,EAAaC,SAAUA,MCqC/DE,E,kDAnCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,QAAQC,IAAI,QACZC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEjB,SAAUgB,S,+BAG/C,SAAkBE,GAChBC,KAAKF,SAAS,CAAER,YAAaS,EAAEE,OAAOC,U,oBAGxC,WAAU,IAAD,EAC2BF,KAAKX,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZa,EAAmBtB,EAASuB,QAAO,SAAC5B,GAAD,OACvCA,EAAQE,KAAK2B,cAAcC,SAAShB,EAAYe,kBAElD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWY,YAAW,qBAAwBC,SAAUc,KAAKO,kBAAkBC,KAAKR,QACpF,cAAC,EAAD,CAAUnB,SAAUsB,W,GA9BVM,IAAMC,WCOTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.26184bae.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n    <h2> {props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n","import React from 'react';\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((user) => (\n        <Card key={user.id} monster={user} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, onChange }) => (\n  <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={onChange} />\n);\n","import React from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    console.log('here');\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChangeInput(e) {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder={`let's find monster`} onChange={this.handleChangeInput.bind(this)} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}